# -*- coding: utf-8 -*-
"""W11_확인문제_Huffman_student.ipynb의 사본

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BK_DRWTZHBvmq31JdO6O5ovIJVBlFKYU

# 다음 표의 캐릭터와 빈도수로 얻어진 값을 호프만 코드로 만드는 파이썬 클래스 HuffmanNode 를 작성하라. 아래 클래스 틀을 활용하라.
"""

class HuffmanNode:
    def __init__(self, frequency, symbol=None, left=None, right=None):
        self.frequency = frequency
        self.symbol = symbol
        self.left = left
        self.right = right

    def is_leaf(self):
        return self.left is None and self.right is None

class HuffmanCoding:
    def __init__(self, frequencies):
        self.nodes = [HuffmanNode(freq, symbol) for symbol, freq in frequencies.items()]

    # 자유롭게 작성
    def get_codes(self):
        node = sorted(self.nodes, key = lambda x : x.frequency, reverse = True)

        while len(node) > 1:
            (key1, val1) = freq_dict[-1] # 가장 작은 값
            (ket2, val2) = freq_dict[-2] # 두번째로 작은 값
            freq_dict = [node for node in freq_dict if node != (key1, val1) and node != (key2, val2)]
            new_node = HuffmanNode(freq_dict, new_key, left = left, right = right)
            freq_dict = sorteed(freq_dict, key = lambda x : x[1], reverse = True)


# Example usage
if __name__ == "__main__":
    # Input frequencies as per Table 9.1.2
    frequencies = {
        '!': 2,
        '@': 3,
        '#': 7,
        '$': 8,
        '%': 12
    }

    # Create HuffmanCoding instance and get the codes
    huffman_coding = HuffmanCoding(frequencies)
    codes = huffman_coding.get_codes()

    # Output the resulting Huffman codes
    print("Huffman Codes for the given frequencies:")
    for symbol, code in codes.items():
        print(f"{symbol}: {code}")